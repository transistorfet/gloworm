
kconfig-file			:= $(src-root)/.config
config-h			:= $(src-root)/include/generated/config.h
build-file			:= $(dir)/Makefile
include-dir			:= $(src-root)/include

AR				?= $(GCC_PREFIX)ar
AS				?= $(GCC_PREFIX)gcc
CC				?= $(GCC_PREFIX)gcc
LD				?= $(GCC_PREFIX)gcc
STRIP				?= $(GCC_PREFIX)strip
OBJDUMP				?= $(GCC_PREFIX)objdump
OBJCOPY				?= $(GCC_PREFIX)objcopy
RANLIB				?= $(GCC_PREFIX)ranlib

asflags-y			+= -I$(include-dir)
ccflags-y			+= -I$(include-dir) -g -Wall
ccflags-y			+= -nostartfiles -nostdlib -fno-zero-initialized-in-bss
ldflags-y 			+= -Wl,--build-id=none

ccflags-$(CONFIG_CC_OPTIMIZE_FOR_SIZE)			+= -Os
ccflags-$(CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE)		+= -O2
ccflags-$(CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3)	+= -O3

ccflags-$(CONFIG_MC68030)	+= -m68030 -msoft-float
asflags-$(CONFIG_MC68030) 	+= -m68030

ccflags-$(CONFIG_MC68010) 	+= -m68010
asflags-$(CONFIG_MC68010) 	+= -m68010

userprog-ccflags-$(CONFIG_M68K)	+= -mpcrel
firmware-ccflags-$(CONFIG_M68K)	+= -mpcrel

# reduce the elf output size by reducing the alignment
ccflags-y			+= -z max-page-size=0x10

export AS AR CC LD STRIP OBJDUMP OBJCOPY RANLIB INCLUDE ASFLAGS CFLAGS LDFLAGS kconfig-file config-h build-file

HOST_GCC			?= gcc
HOST_CFLAGS			?= -I$(src-root)/include -Wall -O3

export HOST_GCC HOST_CFLAGS

